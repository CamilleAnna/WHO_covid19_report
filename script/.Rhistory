axis.line.y = element_line(color="black", size = 0.5),
axis.line.x = element_line(color="black", size = 0.5),
plot.title = element_text(lineheight=.8, face="bold", hjust = 0.5),
panel.grid.major = element_line(color = 'grey', linetype = 'dotted'))
ggplot(upper, aes(x = `compared to`, y = `focal country`, fill= `Time difference (days)`)) +
geom_tile()+
xlab('')+ylab('')+
scale_fill_gradient(low="white", high="firebrick") +
#geom_text(aes(label = epidemic.diff.text, x = `compared to`, y = `focal country`), size = 10, fontface = 2)+
scale_x_discrete(position = "top")+
theme_bw()+
theme(legend.position="bottom",
#legend.text = element_text(size = 35),
legend.title = element_text(face = 2),
panel.border= element_rect(color = 'black', size = 0.5),
axis.text.y = element_text(face="bold", colour="black", size=15),
axis.text.x = element_text(colour="black", face="bold", size=15, angle = 90, hjust = 0, vjust = 0.5),
#axis.title.y = element_text(face="bold", colour="black", size=25),
#axis.title.x = element_text(face="bold", colour="black", size=25),
axis.line.y = element_line(color="black", size = 0.5),
axis.line.x = element_line(color="black", size = 0.5),
plot.title = element_text(lineheight=.8, face="bold", hjust = 0.5),
panel.grid.major = element_line(color = 'grey', linetype = 'dotted'))
View(d)
aligned_curves<- data.frame(day_since_start = c(0, cumsum(as.numeric(diff(d$date)))))
for(c in 2:ncol(d)){
d.temp = d[,c(1, c)]
if(max(d.temp[,2]) == 0){
d.temp.trim.f = data.frame(day_since_start = 0, cumCases = NA)
colnames(d.temp.trim.f)[2]<- colnames(d.temp)[2]
aligned_curves<-
left_join(aligned_curves, d.temp.trim.f, by = 'day_since_start')
}else{
d.temp.trim = d.temp[which(d.temp[,2] > 0), ]
d.temp.trim$day_since_start = c(0, cumsum(as.numeric(diff(d.temp.trim$date))))
d.temp.trim.f<- d.temp.trim[,c(3,2)]
aligned_curves<-
left_join(aligned_curves, d.temp.trim.f, by = 'day_since_start')
}
}
source('/Users/s1687811/Documents/GitHub/covid19/script/sourced_functions_doublingTime_reports.R') # Source several functions used in the below script. See README file for details.
aligned_curves<- data.frame(day_since_start = c(0, cumsum(as.numeric(diff(d$date)))))
for(c in 2:ncol(d)){
d.temp = d[,c(1, c)]
if(max(d.temp[,2]) == 0){
d.temp.trim.f = data.frame(day_since_start = 0, cumCases = NA)
colnames(d.temp.trim.f)[2]<- colnames(d.temp)[2]
aligned_curves<-
left_join(aligned_curves, d.temp.trim.f, by = 'day_since_start')
}else{
d.temp.trim = d.temp[which(d.temp[,2] > 0), ]
d.temp.trim$day_since_start = c(0, cumsum(as.numeric(diff(d.temp.trim$date))))
d.temp.trim.f<- d.temp.trim[,c(3,2)]
aligned_curves<-
left_join(aligned_curves, d.temp.trim.f, by = 'day_since_start')
}
}
View(aligned_curves)
d[rowSums(d[,-1]) > 0,]
aligned_curves<- data.frame(day_since_start = c(0, cumsum(as.numeric(diff(d[rowSums(d[,-1]) > 0,]$date)))))
for(c in 2:ncol(d)){
d.temp = d[,c(1, c)]
if(max(d.temp[,2]) == 0){
d.temp.trim.f = data.frame(day_since_start = 0, cumCases = NA)
colnames(d.temp.trim.f)[2]<- colnames(d.temp)[2]
aligned_curves<-
left_join(aligned_curves, d.temp.trim.f, by = 'day_since_start')
}else{
d.temp.trim = d.temp[which(d.temp[,2] > 0), ]
d.temp.trim$day_since_start = c(0, cumsum(as.numeric(diff(d.temp.trim$date))))
d.temp.trim.f<- d.temp.trim[,c(3,2)]
aligned_curves<-
left_join(aligned_curves, d.temp.trim.f, by = 'day_since_start')
}
}
View(aligned_curves)
d[rowSums(d[,-1]
]
d[rowSums(d[,-1]),]
View(d)
d[,-1]
d[rowSums(d[,-1]) > 0,]
View(d[rowSums(d[,-1]) > 0,])
d[rowSums(d[,-1]) > 0, 1]
d[rowSums(d[,-1]) > 0, 1][-1]
aligned_curves$date<- as.Date(d[rowSums(d[,-1]) > 0, 1][-1])
nrow(aligned_curves)
aligned_curves$date<- as.Date(d[rowSums(d[,-1]) > 0, 1])
today
(today - 7)
aligned_curves[aligned_curves$date > (today - 7),]
d[d$date > (today - 7),]
s
d.last.7<- d[d$date > (today - 7),]
View(d.last.7)
aligned_curves<- data.frame(day_since_start = c(0, cumsum(as.numeric(diff(d.last.7$date)))))
aligned_curves
aligned_curves<- data.frame(day_since_start = c(0, cumsum(as.numeric(diff(d.last.7$date)))))
for(c in 2:ncol(d.last.7)){
d.temp = d.last.7[,c(1, c)]
if(max(d.temp[,2]) == 0){
d.temp.trim.f = data.frame(day_since_start = 0, cumCases = NA)
colnames(d.temp.trim.f)[2]<- colnames(d.temp)[2]
aligned_curves<-
left_join(aligned_curves, d.temp.trim.f, by = 'day_since_start')
}else{
d.temp.trim = d.temp[which(d.temp[,2] > 0), ]
d.temp.trim$day_since_start = c(0, cumsum(as.numeric(diff(d.temp.trim$date))))
d.temp.trim.f<- d.temp.trim[,c(3,2)]
aligned_curves<-
left_join(aligned_curves, d.temp.trim.f, by = 'day_since_start')
}
}
cbind(dat = d.last.7$date,
aligned_curves)
aligned.f<- cbind(dat = d.last.7$date,
aligned_curves)
View(aligned.f)
View(aligned.f[,c(1,2,3,4,8,30)])
View(d)
View(d[,c(1,2,3,4,8,30)+1])
View(d[,c(1,2,3,7,29)])
plot(Algeria ~ dat, data = aligned.f, type = 'l')
plot(log10(Algeria) ~ dat, data = aligned.f, type = 'l')
range(aligned.f$dat)
range(aligned.f[,-c(1,2)])
range(aligned.f[,-c(1,2)], na.rm = TRUE)
xseq.fbc.5<- range(aligned.f$dat)
xseq.fbc.5
xseq.fbc.5<- aligned.f$dat
xseq.fbc.5
max(aligned.f[,-c(1,2)], na.rm = TRUE)
round_any(max(aligned.f[,-c(1,2)], na.rm = TRUE), 10)
ymax.fbc.5<- round_any(max(aligned.f[,-c(1,2)], na.rm = TRUE), 10)
ymax.fbc.5
diff(aligned.f$Algeria)
d.last.7<- d[d$date > (today - 7),]
View()
View(d.last.7)
c(today, today-7)
d[which(d$date %in% c(today, today-7)),]
d[which(d$date %in% c(today, today-7)), -1]
diff(d[which(d$date %in% c(today, today-7)), -1])
d[which(d$date %in% c(today, today-7)), -1] %>%
mutate_all(diff(.))
d[which(d$date %in% c(today, today-7)), -1] %>%
mutate_all(., diff())
d[which(d$date %in% c(today, today-7)), -1] %>%
spread('cases1', 'cases2')
d[which(d$date %in% c(today, today-7)), -1] %>%
spread('cases1', 'cases2', 1:ncol())
d[which(d$date %in% c(today, today-7)), -1]
d[which(d$date %in% c(today, today-7)),] %>%
spread('country', 'n', 2:ncol(d))
d[which(d$date %in% c(today, today-7)),] %>%
gather('country', 'n', 2:ncol(d))
d[which(d$date %in% c(today, today-7)),] %>%
gather('country', 'n', 2:ncol(d)) %>%
group_by(country) %>%
mutate(numNewCases7days = diff(n))
d[which(d$date %in% c(today, today-7)),-1] %>%
gather('country', 'n')
View(d)
d[which(d$date %in% c(today, today-7)),-1] %>%
gather('country', 'n') %>%
group_by(country) %>%
mutate(numNewCases7days = diff(n))
d[which(d$date %in% c(today, today-7)),-1] %>%
gather('country', 'n') %>%
group_by(country) %>%
mutate(numNewCases7days = diff(n)) %>%
select(-n) %>%
unique() %>%
mutate(origin = 0)
test<- d[which(d$date %in% c(today, today-7)),-1] %>%
gather('country', 'n') %>%
group_by(country) %>%
mutate(numNewCases7days = diff(n)) %>%
select(-n) %>%
unique() %>%
mutate(origin = 0) %>%
as.data.frame()
test<- d[which(d$date %in% c(today, today-7)),-1] %>%
gather('country', 'n') %>%
group_by(country) %>%
mutate(numNewCases7days = diff(n)) %>%
select(-n) %>%
unique() %>%
mutate(origin = 1) %>%
as.data.frame()
test
d[which(d$date %in% c(today, today-7)), ] %>%
gather('country', 'n', 2:ncol()) %>%
group_by(country)
d[which(d$date %in% c(today, today-7)), ] %>%
gather('country', 'n', 2:ncol(.))
d[which(d$date %in% c(today, today-7)), ] %>%
gather('country', 'n', 2:ncol(.)) %>%
group_by(country) %>%
mutate(newcases = n - n[1])
d[which(d$date %in% c(today, today-7)), ] %>%
gather('country', 'n', 2:ncol(.)) %>%
group_by(country) %>%
mutate(newcases = 1 + (n - n[1]))
d[which(d$date %in% c(today, today-7)), ] %>%
gather('country', 'n', 2:ncol(.)) %>%
group_by(country) %>%
mutate(newcases = (n - (n[1]-1)))
d[which(d$date %in% c(today, today-7)), ] %>%
gather('country', 'n', 2:ncol(.)) %>%
group_by(country) %>%
mutate(newcases = n - n[1])
test<- d[which(d$date %in% c(today, today-7)), ] %>%
gather('country', 'n', 2:ncol(.)) %>%
group_by(country) %>%
mutate(newcases = n - n[1])
ggplot(test, aes(x = date, y = newcases, group_by = country))+
geom_line()
ggplot(test, aes(x = date, y = newcases, group_by = 'country'))+
geom_line()
ggplot(test, aes(x = date, y = newcases, group = country))+
geom_line()
ggplot(test, aes(x = as.factor(date), y = newcases, group = country))+
geom_line()
test
test<- d[which(d$date %in% c(today, today-7)), ] %>%
gather('country', 'n', 2:ncol(.)) %>%
group_by(country) %>%
mutate(newcases = n/n[1])
test
test<- d[which(d$date %in% c(today, today-7)), ] %>%
gather('country', 'n', 2:ncol(.)) %>%
group_by(country) %>%
mutate(newcases = log10(n/n[1]))
test
test<- d[which(d$date %in% c(today, today-7)), ] %>%
gather('country', 'n', 2:ncol(.)) %>%
group_by(country) %>%
mutate(log10increase.7days = log10(n/n[1]),
increase.7days = n/n[1])
test
ggplot(test, aes(x = as.factor(date), y = log10increase.7days, group = country))+
geom_line()
ggplot(test, aes(x = as.factor(date), y = log10increase.7days, group = country))+
geom_line() +
theme(
scale_y_continuous(breaks = log10(seq(1:10))))
ggplot(test, aes(x = as.factor(date), y = log10increase.7days, group = country))+
geom_line() +
scale_y_continuous(breaks = log10(seq(1:10)))
labels = 10^(log10(seq(1:10)))
ggplot(test, aes(x = as.factor(date), y = log10increase.7days, group = country))+
geom_line() +
scale_y_continuous(breaks = log10(seq(1:10)),
labels = 10^(log10(seq(1:10))))
ggplot(test, aes(x = as.factor(date), y = log10increase.7days, group = country))+
geom_line() +
ylab('Log10 increase over the past 7 days')
ggplot(test, aes(x = as.factor(date), y = log10increase.7days, group = country))+
geom_line() +
ylab('Log10 increase over the past 7 days')+
scale_y_continuous(breaks = log10(seq(1:10)),
labels = 10^(log10(seq(1:10))))+
theme_bw()+
theme(
panel.border= element_blank(),
axis.text.y = element_text(face="bold", colour="black", size=10),
axis.text.x = element_text(colour="black", face="bold", size=10),
axis.title.y = element_text(face="bold", colour="black", size=11),
axis.title.x = element_text(face="bold", colour="black", size=11),
axis.line.y = element_line(color="black", size = 0.5),
axis.line.x = element_line(color="black", size = 0.5),
plot.title = element_text(lineheight=.8, face="bold", hjust = 0.5))
ggplot(test, aes(x = as.factor(date), y = log10increase.7days, group = country))+
geom_line() +
ylab('Log10 increase over the past 7 days\n')+
scale_y_continuous(breaks = log10(seq(1:10)),
labels = 10^(log10(seq(1:10))))+
theme_bw()+
theme(
panel.border= element_blank(),
axis.text.y = element_text(face="bold", colour="black", size=10),
axis.text.x = element_text(colour="black", face="bold", size=10),
axis.title.y = element_text(face="bold", colour="black", size=11),
axis.title.x = element_text(face="bold", colour="black", size=11),
axis.line.y = element_line(color="black", size = 0.5),
axis.line.x = element_line(color="black", size = 0.5),
plot.title = element_text(lineheight=.8, face="bold", hjust = 0.5))
ggplot(test, aes(x = as.factor(date), y = log10increase.7days, group = country))+
geom_line() +
ylab('Log10 increase over the past 7 days\n')+ xlab('')+
scale_y_continuous(breaks = log10(seq(1:10)),
labels = 10^(log10(seq(1:10))))+
theme_bw()+
theme(
panel.border= element_blank(),
axis.text.y = element_text(face="bold", colour="black", size=10),
axis.text.x = element_text(colour="black", face="bold", size=10),
axis.title.y = element_text(face="bold", colour="black", size=11),
axis.title.x = element_text(face="bold", colour="black", size=11),
axis.line.y = element_line(color="black", size = 0.5),
axis.line.x = element_line(color="black", size = 0.5),
plot.title = element_text(lineheight=.8, face="bold", hjust = 0.5))
ggplot(test, aes(x = as.factor(date), y = log10increase.7days, group = country))+
geom_line(col = 'grey') +
#geom_line()
ylab('Log10 increase over the past 7 days\n')+ xlab('')+
scale_y_continuous(breaks = log10(seq(1:10)),
labels = 10^(log10(seq(1:10))))+
theme_bw()+
theme(
panel.border= element_blank(),
axis.text.y = element_text(face="bold", colour="black", size=10),
axis.text.x = element_text(colour="black", face="bold", size=10),
axis.title.y = element_text(face="bold", colour="black", size=11),
axis.title.x = element_text(face="bold", colour="black", size=11),
axis.line.y = element_line(color="black", size = 0.5),
axis.line.x = element_line(color="black", size = 0.5),
plot.title = element_text(lineheight=.8, face="bold", hjust = 0.5))
test
ggplot(test, aes(x = as.factor(date), y = log10increase.7days, group = country))+
geom_line(col = 'grey') +
geom_line(test[test$country == 'Angola',], col = 'black', size = 2)+
ylab('Log10 increase over the past 7 days\n')+ xlab('')+
scale_y_continuous(breaks = log10(seq(1:10)),
labels = 10^(log10(seq(1:10))))+
theme_bw()+
theme(
panel.border= element_blank(),
axis.text.y = element_text(face="bold", colour="black", size=10),
axis.text.x = element_text(colour="black", face="bold", size=10),
axis.title.y = element_text(face="bold", colour="black", size=11),
axis.title.x = element_text(face="bold", colour="black", size=11),
axis.line.y = element_line(color="black", size = 0.5),
axis.line.x = element_line(color="black", size = 0.5),
plot.title = element_text(lineheight=.8, face="bold", hjust = 0.5))
ggplot(test, aes(x = as.factor(date), y = log10increase.7days, group = country))+
geom_line(col = 'grey') +
geom_line(test[test$country == 'Angola',], col = 'black', size = 2, inherit.aes = TRUE)+
ylab('Log10 increase over the past 7 days\n')+ xlab('')+
scale_y_continuous(breaks = log10(seq(1:10)),
labels = 10^(log10(seq(1:10))))+
theme_bw()+
theme(
panel.border= element_blank(),
axis.text.y = element_text(face="bold", colour="black", size=10),
axis.text.x = element_text(colour="black", face="bold", size=10),
axis.title.y = element_text(face="bold", colour="black", size=11),
axis.title.x = element_text(face="bold", colour="black", size=11),
axis.line.y = element_line(color="black", size = 0.5),
axis.line.x = element_line(color="black", size = 0.5),
plot.title = element_text(lineheight=.8, face="bold", hjust = 0.5))
ggplot(test, aes(x = as.factor(date), y = log10increase.7days, group = country))+
geom_line(col = 'grey') +
geom_line(test[test$country == 'Angola',], col = 'black', size = 2, aes(aes(x = as.factor(date), y = log10increase.7days, group = country)))+
ylab('Log10 increase over the past 7 days\n')+ xlab('')+
scale_y_continuous(breaks = log10(seq(1:10)),
labels = 10^(log10(seq(1:10))))+
theme_bw()+
theme(
panel.border= element_blank(),
axis.text.y = element_text(face="bold", colour="black", size=10),
axis.text.x = element_text(colour="black", face="bold", size=10),
axis.title.y = element_text(face="bold", colour="black", size=11),
axis.title.x = element_text(face="bold", colour="black", size=11),
axis.line.y = element_line(color="black", size = 0.5),
axis.line.x = element_line(color="black", size = 0.5),
plot.title = element_text(lineheight=.8, face="bold", hjust = 0.5))
ggplot(test, aes(x = as.factor(date), y = log10increase.7days, group = country))+
geom_line(col = 'grey') +
geom_line(data = test[test$country == 'Angola',])+
ylab('Log10 increase over the past 7 days\n')+ xlab('')+
scale_y_continuous(breaks = log10(seq(1:10)),
labels = 10^(log10(seq(1:10))))+
theme_bw()+
theme(
panel.border= element_blank(),
axis.text.y = element_text(face="bold", colour="black", size=10),
axis.text.x = element_text(colour="black", face="bold", size=10),
axis.title.y = element_text(face="bold", colour="black", size=11),
axis.title.x = element_text(face="bold", colour="black", size=11),
axis.line.y = element_line(color="black", size = 0.5),
axis.line.x = element_line(color="black", size = 0.5),
plot.title = element_text(lineheight=.8, face="bold", hjust = 0.5))
ggplot(test, aes(x = as.factor(date), y = log10increase.7days, group = country))+
geom_line(col = 'grey') +
geom_line(data = test[test$country == 'Angola',], size = 2)+
ylab('Log10 increase over the past 7 days\n')+ xlab('')+
scale_y_continuous(breaks = log10(seq(1:10)),
labels = 10^(log10(seq(1:10))))+
theme_bw()+
theme(
panel.border= element_blank(),
axis.text.y = element_text(face="bold", colour="black", size=10),
axis.text.x = element_text(colour="black", face="bold", size=10),
axis.title.y = element_text(face="bold", colour="black", size=11),
axis.title.x = element_text(face="bold", colour="black", size=11),
axis.line.y = element_line(color="black", size = 0.5),
axis.line.x = element_line(color="black", size = 0.5),
plot.title = element_text(lineheight=.8, face="bold", hjust = 0.5))
ggplot(test, aes(x = as.factor(date), y = log10increase.7days, group = country))+
geom_line(col = 'grey') + ggtitle('Angola')+
geom_line(data = test[test$country == 'Angola',], size = 1.5)+
geom_point(data = test[test$country == 'Angola',], size = 1.5)+
ylab('Log10 increase over the past 7 days\n')+ xlab('')+
scale_y_continuous(breaks = log10(seq(1:10)),
labels = 10^(log10(seq(1:10))))+
theme_bw()+
theme(
panel.border= element_blank(),
axis.text.y = element_text(face="bold", colour="black", size=10),
axis.text.x = element_text(colour="black", face="bold", size=10),
axis.title.y = element_text(face="bold", colour="black", size=11),
axis.title.x = element_text(face="bold", colour="black", size=11),
axis.line.y = element_line(color="black", size = 0.5),
axis.line.x = element_line(color="black", size = 0.5),
plot.title = element_text(lineheight=.8, face="bold", hjust = 0.5))
ggplot(test, aes(x = as.factor(date), y = log10increase.7days, group = country))+
geom_line(col = 'grey') + ggtitle('Angola')+
geom_line(data = test[test$country == 'Angola',], size = 1.5)+
geom_point(data = test[test$country == 'Angola',], size = 1.8)+
ylab('Log10 increase over the past 7 days\n')+ xlab('')+
scale_y_continuous(breaks = log10(seq(1:10)),
labels = 10^(log10(seq(1:10))))+
theme_bw()+
theme(
panel.border= element_blank(),
axis.text.y = element_text(face="bold", colour="black", size=10),
axis.text.x = element_text(colour="black", face="bold", size=10),
axis.title.y = element_text(face="bold", colour="black", size=11),
axis.title.x = element_text(face="bold", colour="black", size=11),
axis.line.y = element_line(color="black", size = 0.5),
axis.line.x = element_line(color="black", size = 0.5),
plot.title = element_text(lineheight=.8, face="bold", hjust = 0.5))
ggplot(test, aes(x = as.factor(date), y = log10increase.7days, group = country))+
geom_line(col = 'grey') + ggtitle('Angola')+
geom_line(data = test[test$country == 'Angola',], size = 1.5)+
geom_point(data = test[test$country == 'Angola',], size = 1.8)+
ylab('Log10 increase over the past 7 days\n')+ xlab('')+
scale_y_continuous(breaks = log10(seq(1:10)),
labels = 10^(log10(seq(1:10))))+
theme_bw()+
theme(
panel.border= element_blank(),
axis.text.y = element_text(face="bold", colour="black", size=10),
axis.text.x = element_text(colour="black", face="bold", size=10),
axis.title.y = element_text(face="bold", colour="black", size=11),
axis.title.x = element_text(face="bold", colour="black", size=11),
axis.line.y = element_line(color="black", size = 0.5),
axis.line.x = element_line(color="black", size = 0.5),
plot.title = element_text(lineheight=.8, face="bold", hjust = 0.5),
panel.grid.major = element_line(color = 'grey', linetype = 'dotted')
)
ggplot(test, aes(x = as.factor(date), y = log10increase.7days, group = country))+
geom_line(col = 'grey') + ggtitle('Angola')+
geom_line(data = test[test$country == 'Angola',], size = 1.5)+
geom_point(data = test[test$country == 'Angola',], size = 1.8)+
ylab('Log10 increase over the past 7 days\n')+ xlab('')+
scale_y_continuous(breaks = log10(seq(1:10)),
labels = 10^(log10(seq(1:10))))+
theme_bw()+
theme(
panel.border= element_blank(),
axis.text.y = element_text(face="bold", colour="black", size=10),
axis.text.x = element_text(colour="black", face="bold", size=10),
axis.title.y = element_text(face="bold", colour="black", size=11),
axis.title.x = element_text(face="bold", colour="black", size=11),
axis.line.y = element_line(color="black", size = 0.5),
axis.line.x = element_line(color="black", size = 0.5),
plot.title = element_text(lineheight=.8, face="bold", hjust = 0.5),
panel.grid.major.y = element_line(color = 'grey', linetype = 'dotted'),
panel.grid.major.x = element_line(color = 'grey'),
panel.grid.minor = element_blank()
)
ggplot(test, aes(x = as.factor(date), y = log10increase.7days, group = country))+
geom_line(col = 'grey') + ggtitle('Angola')+
geom_line(data = test[test$country == 'Angola',], size = 1.5)+
geom_point(data = test[test$country == 'Angola',], size = 1.8)+
ylab('Log10 increase over the past 7 days\n')+ xlab('')+
scale_y_continuous(breaks = log10(seq(1:10)),
labels = 10^(log10(seq(1:10))))+
theme_bw()+
theme(
panel.border= element_blank(),
axis.text.y = element_text(face="bold", colour="black", size=10),
axis.text.x = element_text(colour="black", face="bold", size=10),
axis.title.y = element_text(face="bold", colour="black", size=11),
axis.title.x = element_text(face="bold", colour="black", size=11),
axis.line.y = element_line(color="black", size = 0.5),
axis.line.x = element_line(color="black", size = 0.5),
plot.title = element_text(lineheight=.8, face="bold", hjust = 0.5),
panel.grid.major.y = element_line(color = 'grey', linetype = 'dotted'),
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank()
)
log2(400/200)
log10(2) * log10(400/200)
log(2) * (log(400/200))
log10(2) / log10(400/200)
10^(400+((7*log10(2))/7))
10^(log10(400)+((7*log10(2))/7))
10^(log10(400)+((7*log10(2))/3,5))
10^(log10(400)+((7*log10(2))/3.5))
10^(log10(400)+((7*log10(2))/3.5))
return(yt2)
estimate_Yt2<- function(yt1, Td){
yt2 = 10^(log10(yt1) + ((7 * log10(2))/Td))
return(yt2)
}
estimate_Yt2(400, 3.5)
estimate_Yt2(250, 7)
estimate_Yt2(300, 6)
